import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.*;

public class RestaurantGUI {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            RestaurantInputFrame inputFrame = new RestaurantInputFrame();
            inputFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            inputFrame.setVisible(true);
        });
    }
}


class RestaurantInputFrame extends JFrame {
    private JTextField nameField;
    private JTextArea resultArea;

    public RestaurantInputFrame() {
        super("Restaurant Management System");
        setSize(400, 200);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JPanel inputPanel = new JPanel();
        inputPanel.setLayout(new GridLayout(2, 2));
        inputPanel.add(new JLabel("Restaurant Name:"));
        nameField = new JTextField();
        inputPanel.add(nameField);

        JButton submitButton = new JButton("Add Restaurant");
        submitButton.addActionListener(this::addRestaurant);
        inputPanel.add(submitButton);

        resultArea = new JTextArea(10, 30);
        resultArea.setEditable(false);

        getContentPane().setLayout(new BorderLayout());
        getContentPane().add(inputPanel, BorderLayout.NORTH);
        getContentPane().add(new JScrollPane(resultArea), BorderLayout.CENTER);
    }

    private void addRestaurant(ActionEvent e) {
        String name = nameField.getText().trim();
        if (!name.isEmpty()) {
            try {
                Company.getInstance().addRestaurant(new Restaurant(name));
                resultArea.setText("Restaurant '" + name + "' added successfully.");
            } catch (RestaurantException ex) {
                resultArea.setText("Error: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please enter a restaurant name.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }



    private void saveRestaurantToFile() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try {
                Company.getInstance().saveToFile(fileToSave.getAbsolutePath());
                JOptionPane.showMessageDialog(this, "Data saved to file: " + fileToSave.getAbsolutePath());
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error saving to file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}

class RestaurantDisplayFrame extends JFrame {
    private JTextArea displayArea;

    public RestaurantDisplayFrame(String title, String displayText) {
        super(title);
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        displayArea = new JTextArea(15, 30);
        displayArea.setEditable(false);
        displayArea.setText(displayText);

        getContentPane().add(new JScrollPane(displayArea), BorderLayout.CENTER);
    }
}


public class Company {
    private static Company instance = new Company("Flavors");

    private String name;
    private List<Restaurant> restaurants;

    private Company(String name) {
        this.name = name;
        this.restaurants = new ArrayList<>();
    }

    public static Company getInstance() {
        return instance;
    }

    // Other methods...
}


    public void addRestaurant(Restaurant restaurant) throws RestaurantException {
        if (restaurants.size() < 5) {
            restaurants.add(restaurant);
        } else {
            throw new RestaurantException("Cannot add more restaurants. Company is at full capacity.");
        }
    }

    public void saveToFile(String fileName) throws IOException {
        try (PrintWriter writer = new PrintWriter(new FileWriter(fileName))) {
            for (Restaurant restaurant : restaurants) {
                writer.println(restaurant.getName());
            }
            System.out.println("Restaurant data saved to file: " + fileName);
        }
    }
}

class Restaurant {
    private String name;

    public Restaurant(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public static void saveToFile(String absolutePath) {
        // Placeholder method for saving restaurant data to a file
    }
}

class RestaurantException extends Exception {
    public RestaurantException(String message) {
        super(message);
    }
}
